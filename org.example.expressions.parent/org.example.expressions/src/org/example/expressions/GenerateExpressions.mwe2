module org.example.expressions.GenerateExpressions

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*
import org.eclipse.xtext.xtext.generator.ui.codemining.CodeMiningFragment

var rootPath = ".."

Workflow {
	
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "org.example.expressions"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
				}
				web = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
		}
		language = StandardLanguage {
			name = "org.example.expressions.Expressions"
			fileExtensions = "expressions"

			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			}
			fragment = CodeMiningFragment {
				generateStub = true
				generateXtendStub = true
			}
			fragment = com.itemis.xtext.generator.vscode.VSCodeExtensionFragment {
				publisher = "LorenzoBettini" // this property is mandatory
				versions = {
					xtext = "2.14.0"
				}
			}
		}
	}
}
